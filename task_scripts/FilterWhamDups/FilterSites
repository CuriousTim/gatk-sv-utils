#!/usr/bin/env bash

# FilterWhamDups.FilterSites
# Filter Wham-only DUPs with only SR or RD+SR evidence overlapping blacklist
# regions.
#
# Args: <vcf> <blacklist> <output_vcf> [extra_filters]

set -o errexit
set -o nounset
set -o pipefail

in_vcf="$1"
blacklist="$2"
out_vcf="$3"
extra_filters="${4:-}"

cat2() {
  if [[ "$1" == *.gz ]]; then
    gzip -cd "$1"
  else
    cat "$1"
  fi
}

vcf_sites="$(mktemp -p "${PWD}" tmp.XXXXXXXXX)"
bcftools view --include 'SVTYPE=="DUP" && ALGORITHMS=="wham"' --output-type u "${in_vcf}" \
  | bcftools query "${extra_filters:+--include}" "${extra_filters:-}" \
      --format '%CHROM\t%POS0\t%INFO/END\t%ID\n' \
  | LC_ALL=C sort -k1,1 -k2,2n > "${vcf_sites}"

bl_sorted="$(mktemp -p "${PWD}" tmp.XXXXXXXXX)"
cat2 "${blacklist}" | LC_ALL=C sort -k1,1 -k2,2n > "${bl_sorted}"

bad_sites="$(mktemp -p "${PWD}" tmp.XXXXXXXXX)"
bedtools intersect -a "${bl_sorted}" -b "${vcf_sites}" -wb -F 0.5 -sorted \
  | cut -f 4 > "${bad_sites}"

trap 'rm -f "${vcf_sites}" "${bl_sorted}" "${bad_sites}"' EXIT
read -r bad_sites_count - < <(wc -l "${bad_sites}")
if (( bad_sites_count > 0 )); then
  printf 'flagging %d Wham calls\n' "${bad_sites_count}" >&2
else
  printf 'no Wham calls matching filter\n' >&2
  cp "${in_vcf}" "${out_vcf}"
  if [[ ! -f "${out_vcf}.tbi" ]]; then
    bcftools index --tbi "${out_vcf}"
  fi
  exit 0
fi

bcftools filter --exclude "ID=@${bad_sites}" --output "${out_vcf}" \
  --output-type z "${in_vcf}" --write-index=tbi
